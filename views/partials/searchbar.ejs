<!-- Custom Search Bar -->
<div id="search-bar" class="container my-3 gsap-main">
  <form id="search-form" method="GET" action="<%= searchAction %>">
    <div class="row justify-content-center align-items-center gx-2">
      <!-- Search Input -->
      <div class="col-12 col-md-auto mb-2 mb-md-0">
        <input type="text" class="form-control" id="search-input" name="query" placeholder="Search"
          value="<%= query %>">
      </div>

      <!-- Inline Dropdown for Search Action -->
      <div class="col-6 col-md-auto mb-2 mb-md-0">
        <select class="form-select" id="search-action" name="type">
          <option value="food" <%=activeLink==='food' ? 'selected' : '' %>>Food</option>
          <option value="house" <%=activeLink==='house' ? 'selected' : '' %>>House</option>
          <option value="market" <%=activeLink==='market' ? 'selected' : '' %>>Market</option>
        </select>
      </div>

      <!-- sorting dropdown -->
      <div class="col-6 col-md-auto mb-2 mb-md-0">
        <select class="form-select" id="sort-by-price">
          <option value="">Sort by...</option>
          <option value="price_asc">Price - Low to High</option>
          <option value="price_desc">Price - High to Low</option>
        </select>
      </div>

      <!-- Search Button -->
      <div class="col-12 col-md-auto">
        <button class="btn btn-dark text-light w-100" id="search-button" type="submit">Search</button>
      </div>
    </div>
    <div id="validation-message" class="text-danger mt-2 text-center" style="display: none;">
      Please enter a search term or select a sort option.
    </div>
  </form>
</div>

<!-- JavaScript to Update Form Action, Validate Input, and Handle Sorting -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById('search-input');
    const sortSelect = document.getElementById('sort-by-price');
    const cards = document.querySelectorAll('.card');

    // Helper functions
    const getCardPrice = (card) => {
      const priceElement = card.querySelector('.card-price');
      if (!priceElement) {
        return 0;
      }

      const priceText = priceElement.textContent;
      console.log("Raw price text:", priceText); // Debug: Raw price

      const price = parseFloat(priceText.replace(/[^0-9.]/g, ''));
      console.log("Parsed price:", price); // Debug: Parsed price

      return isNaN(price) ? 0 : price;
    };

    const sortFunctions = {
      price_asc: (a, b) => getCardPrice(a) - getCardPrice(b),
      price_desc: (a, b) => getCardPrice(b) - getCardPrice(a)
    };

    function filterAndSortCards() {
      const query = searchInput.value.toLowerCase().trim();
      const sortOption = sortSelect.value;

      // Convert NodeList to Array and filter
      let filteredCards = Array.from(cards);

      if (query) {
        filteredCards = filteredCards.filter(card => {
          const title = card.querySelector('.card-title')?.textContent.toLowerCase() || '';
          return title.includes(query);
        });
      }

      if (sortOption && sortFunctions[sortOption]) {
        filteredCards.sort(sortFunctions[sortOption]);
      }

      const container = cards[0].parentElement.parentElement;
      const fragment = document.createDocumentFragment();

      cards.forEach(card => card.parentElement.style.display = 'none');
      filteredCards.forEach(card => {
        card.parentElement.style.display = 'block';
        fragment.appendChild(card.parentElement);
      });

      container.appendChild(fragment);
    }

    searchInput.addEventListener('input', () => {
      filterAndSortCards();
    });
    sortSelect.addEventListener('change', () => {
      filterAndSortCards();
    });
  });
</script>