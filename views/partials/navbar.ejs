<style>
  /* Base Nav-Link Styles */
  :root {
    --bg-color: #ffffff;
    --text-color: #000000;

    --secondary-bg-color: #dfdede;
  }

  .dark-mode {
    --bg-color: #1c1c1c;
    --text-color: #ffffff;

    --secondary-bg-color: #000000;
  }

  body {
    background-color: var(--bg-color) !important;
    color: var(--text-color) !important;
  }

  .bg-dark {
    background-color: var(--bg-color) !important;
    color: var(--text-color) !important;
  }

  .nav-link {
    position: relative;
    overflow: hidden;
    color: var(--text-color) !important;
    /* Default link color */
    transition: color 0.3s ease;
    /* Smooth color transition */
  }

  #nav {
    background-color: var(--bg-color);
    color: var(--text-color);
  }

  /* Underline Animation */
  .nav-link::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background-color: black;
    transform: translateX(-100%);
    transition: transform 0.3s ease;
  }

  /* Special styling for first nav item */
  .nav-item:first-child .nav-link::after {
    background-color: #0078d7;
  }

  /* Hover state for underline animation */
  .nav-link:hover::after {
    transform: translateX(0);
  }

  /* Hover state to change link color */
  .nav-link:hover {
    color: #2098D1;
  }

  /* Ensure all links except the first are black */
  .nav-link:not(:first-child) {
    color: black;
  }

  /* Grow effect for hover */
  .hvr-grow {
    display: inline-block;
    vertical-align: middle;
    transform: perspective(1px) translateZ(0);
    transition: transform 0.3s ease;
  }

  .hvr-grow:hover {
    transform: scale(1.1);
  }

  /* General hover button/link styling */
  [class^="hvr-"] {
    margin: 0.4em;
    padding: 1em;
    cursor: pointer;
    background: #e1e1e1;
    text-decoration: none;
    color: #666;
    font-family: 'Roboto', sans-serif;
  }

  /* Ensure base anchor tag styling */
  a {
    color: #2098D1;
    text-decoration: none;
  }

  /* Enhanced Styling for Active Links */
  .active-link {
    background-color: var(--secondary-bg-color);
    border-radius: 5px;
    padding: 5px 10px;
  }

  /* Hover effect for nav links */
  .navbar-nav .nav-link:hover {
    background-color: #e2e6ea;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .nav-link:hover {
    color: black !important;
  }

  /* Navbar shadow on scroll */
  .sticky-top {
    box-shadow: none;
    transition: box-shadow 0.3s ease;
  }

  .navbar-toggler {
    border: none;
    /* Change border color */
  }

  .navbar-toggler i {
    color: var(--text-color)
  }

  .navbar-toggler:focus {
    box-shadow: none;
    /* Change border color */
  }

  /* Add shadow when scrolled */
  .sticky-top.scrolled {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .toggleMode {
    width: 25px;
    height: 25px;
  }

  #darkModeToggle {
    outline: none;
    border: none;
    background: transparent;
  }

  /* For Sign-Up button */
  .btn-space {
    min-width: 120px;
    padding: 0.5rem 1rem;
    border-radius: 5px;
  }

  .navbar .btn {
    min-width: 120px;
    padding: 0.5rem 1rem;
    border-radius: 5px;
  }

  .btn i {
    vertical-align: middle;
  }

  .dropdown-menu {
    background: var(--bg-color) !important;
  }

  .dropdown-item {
    color: var(--text-color) !important;
  }

  .dropdown-item:hover {
    background: var(--secondary-bg-color) !important;
  }

  .dropdown-item:focus {
    background: var(--secondary-bg-color) !important;
  }

  .navbar-toggler {
    color: var(--text-color) !important;
  }

  @media (max-width: 768px) {
    .navbar .btn {
      flex-grow: 1;
      margin-bottom: 10px;
    }
  }
</style>

<nav id="nav" class="navbar sticky-top p-2 navbar-expand-lg shadow-sm">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">
      <img id="navbarLogo" src="/banner.png" alt="Scruter Logo" width="90" height="30"
        class="d-inline-block align-text-top" />
    </a>



    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navBar">
      <i class="fa-solid fa-bars me-2"></i>
    </button>



    <div class="collapse navbar-collapse" id="navBar">
      <!-- For Big Screens  -->
      <ul class="navbar-nav justify-content-center flex-grow-1 d-none d-lg-flex">
        <li class="nav-item">
          <a class="nav-link <%= activeLink === 'house' ? 'active-link' : '' %>" href="/house"><i
              class="fa-solid fa-house me-2"></i>Housing</a>
        </li>
        <li class="nav-item">
          <a class="nav-link <%= activeLink === 'food' ? 'active-link' : '' %>" href="/food"><i
              class="fa-solid fa-utensils me-2"></i>Food</a>
        </li>
        <li class="nav-item">
          <a class="nav-link <%= activeLink === 'market' ? 'active-link' : '' %>" href="/market"><i
              class="fa-solid fa-cart-shopping me-2"></i>For Sale</a>
        </li>
      </ul>

      <!-- For Small Screens -->
      <ul class="navbar-nav justify-content-center d-lg-none mt-3">
        <% if(!user) { %>
          <li class="nav-item d-grid">
            <a class="btn btn-outline-success me-2 flex-grow-1" href="/auth?action=login">
              <i class="fa-solid fa-user me-2"></i>Login
            </a>
          </li>
          <% } else { %>
            <li class="nav-item d-flex">
              <a class="btn btn-outline-secondary" href="/dashboard">
                <i class="fa-solid fa-gear me-2"></i>
                Settings
              </a>

              <a class="btn btn-danger" href="/logout">
                <i class="fa-solid fa-right-from-bracket me-2"></i>
                Logout
              </a>
            </li>
            <% } %>

              <li class="nav-item">
                <a class="btn btn-info"
                  onclick="localStorage.setItem('theme', localStorage.getItem('theme') == 'dark' ? 'light' : 'dark');location.reload()">
                  Toggle Theme
                </a>
              </li>
      </ul>

      <div class="ms-auto d-flex gap-2 d-none d-lg-block">
        <% if (user) { %>
          <div class="btn-group">
            <button style="border: none; background: none; color: var(--text-color);" class="d-flex align-items-center"
              data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">

              <div class="me-2 text-end">
                <p class="mb-0 small" style="color: var(--text-color)">
                  <%= user.username %>
                </p>
                <p class="mb-0 small text-secondary">
                  <%= user.email.slice(0, 5) + "xxx@gmail.com" %>
                </p>
              </div>

              <div class="me-2 dropdown-toggle">
                <img class="img-fluid rounded-circle" style="height: 30px; object-fit: cover;" src="/avatar.jpg"
                  alt="alt">
              </div>
            </button>

            <ul class="dropdown-menu">
              <li class="dropstart">
                <a class="dropdown-item" href="#" data-bs-toggle="dropdown">
                  <i class="fa-solid fa-plus me-2"></i>
                  Create Post
                </a>

                <ul class="dropdown-menu">
                  <li>
                  <li><a class="dropdown-item" href="/house/form">House Ad</a></li>
                  <li><a class="dropdown-item" href="/food/form">Food Ad</a></li>
                  <li><a class="dropdown-item" href="/market/form">For Sale Ad</a></li>
              </li>
            </ul>
            </li>

            <li>
              <a class="dropdown-item" href="/dashboard">
                <i class="fa-solid fa-gear me-2"></i>
                Settings
              </a>
            </li>

            <li>
              <a class="dropdown-item" href="/logout">
                <i class="fa-solid fa-right-from-bracket me-2"></i>
                Logout
              </a>
            </li>
            </ul>
          </div>
          <% } %>

            <button id="darkModeToggle">
              <img src="https://img.icons8.com/?size=100&id=45475&format=png&color=000000" class="toggleMode"
                id="toggleMode" alt="">
            </button>
      </div>
    </div>


  </div>
</nav>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const toggleButton = document.getElementById("darkModeToggle");
    const image = document.getElementById("toggleMode");
    const body = document.body;
    const navbar = document.getElementById("nav");
    const logo = document.getElementById("navbarLogo"); // Reference to the logo image
    const footer = document.getElementById("footer");
    let mode = localStorage.getItem("theme") || "light";

    localStorage.setItem("theme", mode);
    console.log(localStorage.getItem("theme"));

    const moon = "https://img.icons8.com/?size=100&id=45475&format=png&color=ffffff";
    const sun = "https://img.icons8.com/?size=100&id=648&format=png&color=000000";

    // Initial setup based on saved theme
    if (mode === "dark") {
      body.classList.add("dark-mode");
      navbar.classList.add("dark-mode");
      if (footer) {
        footer.classList.add("dark-mode");
      }
      image.src = moon;
      logo.src = "/banner2.png"; // Change logo for dark mode
    } else {
      image.src = sun;
    }

    // Toggle dark/light mode
    toggleButton.addEventListener("click", function () {
      body.classList.toggle("dark-mode");
      navbar.classList.toggle("dark-mode");
      if (footer) {
        footer.classList.toggle("dark-mode");
      }
      mode = mode === "light" ? "dark" : "light";

      if (mode === "dark") {
        localStorage.setItem("theme", "dark");
        image.src = moon;
        logo.src = "/banner2.png"; // Change logo for dark mode
      } else {
        localStorage.setItem("theme", "light");
        image.src = sun;
        logo.src = "/banner.png"; // Revert to original logo for light mode
      }
    });

    // Add shadow to navbar on scroll
    window.addEventListener("scroll", function () {
      const navbar = document.querySelector(".sticky-top");
      if (window.scrollY > 50) {
        navbar.classList.add("scrolled");
      } else {
        navbar.classList.remove("scrolled");
      }
    });

    // Hover functionality for dropdown
    const dropdown = document.querySelector(".dropdown");
    dropdown.addEventListener("mouseenter", () => {
      const dropdownMenu = dropdown.querySelector(".dropdown-menu");
      dropdownMenu.classList.add("show");
    });

    dropdown.addEventListener("mouseleave", () => {
      const dropdownMenu = dropdown.querySelector(".dropdown-menu");
      dropdownMenu.classList.remove("show");
    });
  });
</script>