// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid()) @map("_id")
  name         String

  email String @unique
  otp   String?
  role  String  @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Seller {
  id String @id @default(uuid()) @map("_id")
  name String

  email        String  @unique
  otp          String?
  role         String  @default("Seller")

  Listings Listing[] @relation("SellerToListing")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  Housing 
  Fooding
  For_Sale
}

model Listing {
  id String @id @default(uuid()) @map("_id")

  SellerId String
  Seller   Seller  @relation("SellerToListing", fields: [SellerId], references: [id])

  name        String
  price       Int
  description String

  category Category

  images Image[]
  // add is featured feature
  isArchived  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


model Image {
  id String @id @default(uuid()) @map("_id")

  listingId String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  url String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}